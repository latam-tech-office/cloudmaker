#!/usr/bin/env ansible-playbook
---
- name: Delete all Instances
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
     - cloud.info
     - gce/authentication
     - gce/defaults
  tasks:
    - include: commons/setting_defaults.yaml

    - set_fact: all_instances="{{ openshift_master }}"
      when: openshift_master is defined
   
    - set_fact: all_instances="{{ all_instances }} + {{ openshift_infra }}"
      when: openshift_infra is defined

    - set_fact: all_instances="{{ all_instances }} + {{ openshift_node }}"
      when: openshift_node is defined

    - name: Deleting OpenShift's Master instances
      gce:
        instance_names: "{{ item.name }}"
        zone: "{{ zone }}"
        state: "absent"
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ all_instances }}"
      tags:
         - instance

    - name: Deleting all Docker Storages
      gce_pd:
        name: "{{ item.name }}-docker"
        zone: "{{ zone }}"
        state: absent
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ all_instances }}"
      tags:
         - docker

    - name: Deleting all the Firewall Rules from Network{{ ':' }} {{ network_name }}
      gce_net:
        name: "{{ network_name }}"
        fwname: "{{ network_name}}-{{ item.name }}"
        allowed: "{{ item.allow }}"
        src_range: "{{ item.range }}"
        target_tags: "{{ item.tag }}"
        state: absent
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_firewall_rules }}"
      tags:
         - network      

    - name: Deleting Subnetwork created{{ ':' }} {{ subnetwork_name }}
      gce_net:
        name: "{{ network_name }}"
        mode: custom
        subnet_name: "{{ subnetwork_name }}"
        subnet_region: "{{ region }}"
        ipv4_range: "{{ subnetwork_range }}"
        state: absent
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      tags:
         - network

    - name: Wait for Subnetwork deleting to settle down
      pause: seconds=30
      tags:
         - network

    - name: Deleting Network created{{ ':' }} {{ network_name }}
      gce_net:
        name: "{{ network_name }}"
        state: absent
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      tags:
         - network
         - network_name

