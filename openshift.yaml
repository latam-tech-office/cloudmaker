---
- name: Creating all the necessary instances
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
     - cloud.info
     - gce/authentication
     - gce/defaults
  tasks:
    - include: commons/settings_defaults.yaml

### MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER 
###  MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER MASTER 
    - name: Creating OpenShift's Master instances
      gce:
        instance_names: "{{ item.name }}"
        state: "present"
        machine_type: "{{ item.machine }}"
        image: "{{ image }}"
        zone: "{{ zone }}"
        network: "{{ network_name }}"
        subnetwork: "{{ subnetwork_name }}"
        tags: "{{ item.tags }}"
#        disks:
#           - name: "{{ item.name }}-main"
#             mode: READ_WRITE
#           - name: "{{ item.name }}-docker"
#             mode: READ_WRITE
        disk_auto_delete: True 
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_master }}"
      register: master_instance_creation
      when: openshift_master is defined
      tags:
         - create
         - master

    - name: Attaching a Docker storage area for OpenShift's Master instances
      gce_pd:
        instance_name: "{{ item.name }}"
        name: "{{ item.name }}-docker"
        state: present
        mode: READ_WRITE
        disk_type: pd-standard
        size_gb: "{{ item.disk_docker }}"
        zone: "{{ zone }}"
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_master }}"
      tags:
         - create
         - storage
         - docker_disk
         - master

#    - debug: var=master_instance_creation
#      tags:
#         - create
#         - master

    - name: Save host data for OpenShift's Master
      add_host: hostname={{ item.instance_data[0].public_ip }} groups=openshift_master
                ansible_ssh_user=root ansible_ssh_port=22  instance_name={{ item.instance_names[0] }}
      with_items: "{{ master_instance_creation.results }}"
      when: master_instance_creation is defined and openshift_master is defined
      tags:
         - create
         - master

    - name: Writing into /etc/hosts the public address for this master (PENDING{{ ':' }} Add that into a Load Balancer)
      lineinfile: dest=/etc/hosts state=present regexp="{{ item.instance_names[0] }}.{{ openshift_domain }}" line="{{ item.instance_data[0].public_ip }} {{ item.instance_names[0] }}.{{ openshift_domain }}"
      with_items: "{{ master_instance_creation.results }}"
      when: master_instance_creation is defined and openshift_master is defined
      become: True
      tags:
         - create
         - master

### INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA 
###  INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA INFRA 
    - name: Creating OpenShift's Infra instances
      gce:
         instance_names: "{{ item.name }}"
         state: "present"
         machine_type: "{{ item.machine }}"
         image: "{{ image }}"
         zone: "{{ zone }}"
         network: "{{ network_name }}"
         subnetwork: "{{ subnetwork_name }}"
         tags: "{{ item.tags }}"
#        disks:
#           - name: "{{ item.name }}-main"
#             mode: READ_WRITE
#           - name: "{{ item.name }}-docker"
#             mode: READ_WRITE
         disk_auto_delete: True
         project_id: "{{ gce_project_id }}"
         credentials_file: "{{ gce_credentials_file }}"
         service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_infra }}"
      register: infra_instance_creation
      when: openshift_infra is defined
      tags:
         - create
         - infra

    - name: Attaching a Docker storage area for OpenShift's Infra instances
      gce_pd:
        instance_name: "{{ item.name }}"
        name: "{{ item.name }}-docker"
        state: present
        mode: READ_WRITE
        disk_type: pd-standard
        size_gb: "{{ item.disk_docker }}"
        zone: "{{ zone }}"
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_infra }}"
      when: openshift_infra is defined
      tags:
         - create
         - infra
         - storage
         - docker_disk

    - name: Save host data for OpenShift's Infra
      add_host: hostname={{ item.instance_data[0].public_ip }} groups=openshift_infra
                ansible_ssh_user=root ansible_ssh_port=22   instance_name={{ item.instance_names[0] }}
      with_items: "{{ infra_instance_creation.results }}"
      when: infra_instance_creation is defined and openshift_infra is defined
      tags: 
         - create
         - infra

    - name: Fetch Infra's Public IP (PENDING{{ ':' }} Add that into a Load Balancer)
      set_fact: openshift_infra_public_ip={{ item.instance_data[0].public_ip }}
      with_items: "{{ infra_instance_creation.results }}"
      when: infra_instance_creation is defined and openshift_infra is defined
      tags:
         - create
         - infra      

    - name: Writing into /etc/hosts the public address for this master (PENDING{{ ':' }} Add that into a Load Balancer)
      lineinfile: dest=/etc/hosts state=present regexp="{{ item }}.cloudapps.{{ openshift_domain }}" line="{{ openshift_infra_public_ip }} {{ item }}.cloudapps.{{ openshift_domain }}"
      with_items: "{{ common_cloudapps }}"
      when: infra_instance_creation is defined and openshift_infra is defined
      become: True
      tags:
         - create
         - infra

### NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE 
###   NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE NODE 
    - name: Creating OpenShift's Node instances
      gce:
         instance_names: "{{ item.name }}"
         state: "present"
         machine_type: "{{ item.machine }}"
         image: "{{ image }}"
         zone: "{{ zone }}"
         network: "{{ network_name }}"
         subnetwork: "{{ subnetwork_name }}"
         tags: "{{ item.tags }}"
#        disks:
#           - name: "{{ item.name }}-main"
#             mode: READ_WRITE
#           - name: "{{ item.name }}-docker"
#             mode: READ_WRITE
         disk_auto_delete: True
         project_id: "{{ gce_project_id }}"
         credentials_file: "{{ gce_credentials_file }}"
         service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_node }}"
      register: node_instance_creation
      when: openshift_node is defined
      tags:
         - create
         - node

    - name: Attaching a Docker storage area for OpenShift's Node instances
      gce_pd:
        instance_name: "{{ item.name }}"
        name: "{{ item.name }}-docker"
        state: present
        mode: READ_WRITE
        disk_type: pd-standard
        size_gb: "{{ item.disk_docker }}"
        zone: "{{ zone }}"
        project_id: "{{ gce_project_id }}"
        credentials_file: "{{ gce_credentials_file }}"
        service_account_email: "{{ gce_service_account_email }}"
      with_items: "{{ openshift_node }}"
      when: openshift_node is defined 
      tags:
         - storage
         - docker_disk
         - create
         - node

    - name: Save host data for OpenShift's Node
      add_host: hostname={{ item.instance_data[0].public_ip }} groups=openshift_nodes
                ansible_ssh_user=root ansible_ssh_port=22  instance_name={{ item.instance_names[0] }}
      with_items: "{{ node_instance_creation.results }}"
      when: node_instance_creation is defined and openshift_node is defined
      tags:
         - create
         - node

### WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR 
###   WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR WAIT FOR 
    - name: Wait for OpenShift's Master instances to be up
      wait_for: host="{{ item.instance_data[0].public_ip }}" port=22   delay=30  state=started
      with_items: "{{ master_instance_creation.results }}"
      when: master_instance_creation is defined and openshift_master is defined
      tags:
         - wait_for

    - name: Wait for OpenShift's Infra instances to be up
      wait_for: host="{{ item.instance_data[0].public_ip }}" port=22   delay=30  state=started
      with_items: "{{ infra_instance_creation.results }}"
      when: infra_instance_creation is defined and openshift_infra is defined
      tags:
         - wait_for

    - name: Wait for OpenShift's Node instances to be up
      wait_for: host="{{ item.instance_data[0].public_ip }}" port=22   delay=30  state=started
      with_items: "{{ node_instance_creation.results }}"
      when: node_instance_creation is defined and openshift_node is defined
      tags:
         - wait_for

### TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE 
###  TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE TEMPLATE 
    - name: Generating the first version of the inventory file
      template: src=templates/ansible_hosts.j2 dest=/tmp/ansible_hosts.j2
      tags: 
         - openshift_inventory

- name: Preparing all hosts to install OpenShift
  hosts: all
  vars_files:
     - cloud.info
  tasks:
    - name: Use Cloud's Provider internal name for naming the nodes
      set_fact: internal_hostname={{ instance_name }}.{{ ansible_dns.search[0] }}
      tags:
         - prepare

    - name: Setting the hostname
      command: hostnamectl set-hostname {{ instance_name }}.{{ openshift_domain }}
      tags:
         - prepare       

    - name: Installing Basic Applications
      yum: name="{{ item }}" state=present
      with_items: "{{ prereqs_packages }}"
      tags:
         - prepare

    - name: Create a partition for Docker
      command: parted {{ docker_device }} --script 'mklabel msdos mkpart primary 0% 100%'
      tags:
         - prepare

    - name: Create a VG named docker-vg (used for Docker)
      lvg: vg=docker-vg pvs={{ docker_device_partition }}
      tags:
         - prepare

    - name: Configuring Docker-Storage-Setup first
      lineinfile: dest=/etc/sysconfig/docker-storage-setup line="VG=docker-vg"
      tags:
         - prepare

    - name: Run a Docker-Storage-Setup
      command: /usr/bin/docker-storage-setup
      tags:
         - prepare

    - name: Execute a Atomic OpenShift Excluder
      command: atomic-openshift-excluder unexclude
      tags:
         - prepare

    - name: Setting Docker configuration with with the correct info
      lineinfile: dest=/etc/sysconfig/docker regexp="OPTIONS=.*" line="OPTIONS=\"--selinux-enabled --insecure-registry 172.30.0.0/16  --log-driver=journald\""
      tags:
         - prepare


### MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY 
###  MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY MASTER INVENTORY 
- name: Updating inventory file with OpenShit's Master hostname
  hosts: openshift_master
  serial: 1
  vars_files:
     - cloud.info
  tasks:
    - name: MASTER{{ ':' }} Use Cloud's Provider internal name as hostname
      set_fact: internal_hostname={{ instance_name }}.{{ ansible_dns.search[0] }}
      tags:
         - master_inventory

    - name: MASTER{{ ':' }} Adding Hostname into the Invetory file, Master's Section
      local_action: lineinfile dest=/tmp/ansible_hosts.j2 insertafter="\[masters\]" state="present" line="{{ internal_hostname }}"
      tags:
         - master_inventory

    - name: MASTER{{ ':' }} Adding Hostname into the Inventory file, Node's Section
      local_action: lineinfile dest=/tmp/ansible_hosts.j2 insertafter="\[nodes\]" state="present" line="{{ internal_hostname }} openshift_public_hostname={{ instance_name }}.{{ openshift_domain }}"
      tags:
         - master_inventory

### INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA
###   INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA INVENTORY INFRA
- name: Updating inventory file with OpenShit's Infra hostname
  hosts: openshift_infra
  serial: 1
  tasks:
    - name: INFRA{{ ':' }} Use Cloud's Provider internal name as hostname
      set_fact: internal_hostname={{ instance_name }}.{{ ansible_dns.search[0] }}
      tags:
         - infra_inventory

    - name: INFRA{{ ':' }} Adding Hostname into the Inventory file, Node's Section
      local_action: lineinfile dest=/tmp/ansible_hosts.j2 insertafter="\[nodes\]" state="present" line="{{ internal_hostname }} openshift_node_labels=\"{'host'{{ ':' }} 'infra'}\""
      tags:
         - infra_inventory

### NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES 
###   NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES NODES 
- name: Updating inventory file with OpenShit's Node hostname
  hosts: openshift_nodes
  serial: 1
  tasks:
    - name: NODE{{ ':' }} Use Cloud's Provider internal name as hostname
      set_fact: internal_hostname={{ instance_name }}.{{ ansible_dns.search[0] }}
      tags:
         - node_inventory

    - name: NODE{{ ':' }} Adding Hostname into the Inventory file, Node's Section
      local_action: lineinfile dest=/tmp/ansible_hosts.j2 insertafter="\[nodes\]" state="present" line="{{ internal_hostname }} openshift_node_labels=\"{'host'{{ ':' }} 'apps'}\""
      tags:
         - node_inventory


- name: Disable SSH in all Nodes (except Master)
  hosts: openshift_infra, openshift_nodes
  vars_files:
     - gce/authentication
  tasks:
     - set_fact: all_except_master="{{ openshift_infra }}"
       when: openshift_infra is defined
       tags:
          - disable_ssh

     - set_fact: all_except_master="{{ all_except_master }} + {{ openshift_node }}"
       when: openshift_node is defined
       tags:
          - disable_ssh

     - name: Removing SSH tags from Infra and Nodes Host
       gce_tag:
         instance_names: "{{ item.name }}"
         tags: "enable-ssh"
         zone: "{{ zone }}"
         state: "absent"
         project_id: "{{ gce_project_id }}"
         credentials_file: "{{ gce_credentials_file }}"
         service_account_email: "{{ gce_service_account_email }}"
       with_items: "{{ all_except_master  }}"
       when: all_except_master is defined
       tags:
          - disable_ssh

### INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING 
###  INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING INSTALLING 
- name: Installing OpenShift's installer on Master
  hosts: openshift_master
  vars_files:
     - cloud.info
  tasks:
    - name: INSTALL{{ ':' }} Creating inventory file into OpenShift's Master
      template: src=/tmp/ansible_hosts.j2 dest=/etc/ansible/hosts
      tags:
         - openshift_install

    - name: Disable 'host_key_checking' in Ansible
      lineinfile: dest=/etc/ansible/ansible.cfg regexp="host_key_checking" state=present line="host_key_checking = False"
      tags:
         - openshift_install

    - name: INSTALL{{ ':' }} Installing installer
      yum: name="atomic-openshift-utils" state=present
      tags:
         - openshift_install

    - name: Update bin/install_openshift.sh to call the right server
      local_action: copy dest=bin/install_openshift.sh content="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ instance_name }}.{{ openshift_domain }} \"ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml\""
      tags: 
         - openshift_install

#    - name: INSTALL{{ ':' }} Running
#      include: /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
#      command: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ instance_name }}.{{ openshift_domain }} "ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml"
#      tags:
#         - openshift_install
